import { notFound } from 'next/navigation';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { CodeBlock } from '@/components/CodeBlock';
import { getTool, getTools } from '@/lib/supabase/tools';

// Revalidate every minute
export const revalidate = 60;

// Allow dynamic params that aren't generated by generateStaticParams
export const dynamicParams = true;

// Pre-render the most recent tools at build time
export async function generateStaticParams() {
  const tools = await getTools(10);
  return tools.map((tool) => ({
    owner: tool.owner_username,
    handle: tool.handle,
  }));
}

type PageProps = {
  params: Promise<{
    owner: string;
    handle: string;
  }>;
  searchParams: Promise<{ [key: string]: string | string[] | undefined }>;
};

export default async function ToolPage({
  params,
}: PageProps) {
  const { owner, handle } = await params;
  
  const tool = await getTool(owner, handle);
  if (!tool) {
    notFound();
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header Section */}
      <div className="bg-white border-b">
        <div className="container mx-auto px-4 py-8">
          <div>
            <div className="flex items-center gap-3 mb-2">
              <h1 className="text-3xl font-bold">{tool.name}</h1>
              <div className="px-2 py-1 rounded-full bg-gray-100 text-sm text-gray-600">
                by {tool.owner_username}
              </div>
            </div>
            <p className="text-lg text-gray-600 max-w-3xl">
              {tool.description}
            </p>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="container mx-auto px-4 py-8">
        <div className="grid grid-cols-12 gap-6">
          {/* Sidebar */}
          <div className="col-span-3">
            <div className="bg-white rounded-lg border p-4 sticky top-20">
              <h3 className="font-semibold mb-3">Tool Information</h3>
              <dl className="space-y-2">
                <div>
                  <dt className="text-sm text-gray-500">By</dt>
                  <dd className="font-mono text-sm">{tool.owner_username}</dd>
                </div>
                <div>
                  <dt className="text-sm text-gray-500">Capabilities</dt>
                  <dd className="font-mono text-sm">{tool.capabilities.length}</dd>
                </div>
              </dl>
            </div>
          </div>

          {/* Main Content */}
          <div className="col-span-9">
            <h2 className="text-2xl font-semibold mb-4">Capabilities</h2>
            <div className="space-y-4">
              {tool.capabilities.map((capability) => (
                <Card key={capability.id} className="bg-white">
                  <CardHeader>
                    <div>
                      <CardTitle>{capability.name}</CardTitle>
                      <CardDescription className="mt-1">
                        {capability.description}
                      </CardDescription>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <Tabs defaultValue="schema" className="w-full">
                      <TabsList>
                        <TabsTrigger value="schema">Schema</TabsTrigger>
                        <TabsTrigger value="runner">Runner</TabsTrigger>
                      </TabsList>
                      <TabsContent value="schema" className="mt-4">
                        <div className="rounded-lg overflow-hidden border">
                          <CodeBlock code={capability.schema} language="typescript" />
                        </div>
                      </TabsContent>
                      <TabsContent value="runner" className="mt-4">
                        <div className="rounded-lg overflow-hidden border">
                          <CodeBlock code={capability.runner} language="typescript" />
                        </div>
                      </TabsContent>
                    </Tabs>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 